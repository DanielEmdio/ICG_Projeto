/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 sacred_ring_halo.glb 
Author: Anthony Yanez (https://sketchfab.com/paulyanez)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sacred-ring-halo-07474d33a7564b34a557ad1be4536a79
Title: Sacred Ring (Halo)
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { shipPosition } from "./Space_ship";
import { Vector3 } from 'three';

const TARGET_RAD = 0.125;

export function Ring(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('assets/models/sacred_ring_halo.glb')
  const { actions } = useAnimations(animations, group)
  
  let hit = false; // Declare the 'hit' variable here
  let center = new Vector3(10, 10, 10); // Declare the 'center' variable here
  let direction = new Vector3(0, 0, 0); // Declare the 'direction' variable here
  
  useFrame(() => {
    const v = shipPosition.clone().sub(center);
    const dist = direction.dot(v);
    const projected = shipPosition
      .clone()
      .sub(direction.clone().multiplyScalar(dist));

    const hitDist = projected.distanceTo(center);
    if (hitDist < TARGET_RAD && Math.abs(dist) < 0.05) {
      hit = true;
    }
  });
  
  return (
    <group ref={group} {...props} dispose={null}>
      {hit ? (
        <group name="Sketchfab_Scene">
          <group name="Sketchfab_model" position={[0, -3.703, 0.847]} rotation={[-2.083, 0, 0]}>
            <group name="Halo_RingFBX" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Object_2">
                <group name="RootNode">
                  <group name="Halo_Ring" position={[0.221, -0.221, -89.907]} rotation={[0, 0, -0.175]} scale={[3.177, 3.177, 12.988]}>
                    <mesh name="Halo_Ring_02_-_Default_0" geometry={nodes['Halo_Ring_02_-_Default_0'].geometry} material={materials['02_-_Default']} />
                    <mesh name="Halo_Ring_03_-_Default_0" geometry={nodes['Halo_Ring_03_-_Default_0'].geometry} material={materials['03_-_Default']} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      ) : null}
    </group>
  )
}

useGLTF.preload('assets/models/sacred_ring_halo.glb')
